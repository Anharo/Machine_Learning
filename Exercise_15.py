# -*- coding: utf-8 -*-
"""Exercise 15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1miRWBiGAQmjJr_3GFQQJfoBeR9z7Bvt9
"""

import pandas as pd
from sklearn.datasets import load_digits
from sklearn.model_selection import GridSearchCV
from sklearn import svm
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.naive_bayes import GaussianNB
from sklearn.naive_bayes import MultinomialNB
from sklearn.tree import DecisionTreeClassifier

digits = load_digits()
dir(digits)

df = pd.DataFrame(digits.data)
df['target'] = digits.target

df.head()

y= df.target
df.drop('target', axis=1, inplace=True)
x= df

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

clf1 = GridSearchCV(svm.SVC(gamma='auto'), {
    'C': [1,10,20],
    'kernel': ['rbf','linear']
}, cv=5, return_train_score=False)
clf1.fit(x,y)
clf1.cv_results_

df = pd.DataFrame(clf1.cv_results_)
df

rfc = RandomForestClassifier()
clf2 = GridSearchCV(rfc, {
    'n_estimators': [1,5,10]
}, cv=5, return_train_score=False)
clf2.fit(x,y)
clf2.cv_results_

df = pd.DataFrame(clf2.cv_results_)
df

lr = LogisticRegression()
clf3 = GridSearchCV(lr, {
    'C': [1,10,20]
}, cv=5, return_train_score=False)
clf3.fit(x,y)
clf3.cv_results_

df = pd.DataFrame(clf3.cv_results_)
df

gnb = GaussianNB()
gnb.fit(x_train,y_train)
gnb.score(x_test,y_test)

mnv = MultinomialNB(alpha=0.1)
mnv.fit(x_train,y_train)
mnv.score(x_test,y_test)

dtc = DecisionTreeClassifier()
clf4 = GridSearchCV(dtc, {
    'criterion': ['gini','entropy']
}, cv=5, return_train_score=False)
clf4.fit(x,y)
clf4.cv_results_

df = pd.DataFrame(clf4.cv_results_)
df

a= clf1.best_params_
b= clf1.best_score_
a,b

a= clf2.best_params_
b= clf2.best_score_
a,b

a= clf3.best_params_
b= clf3.best_score_
a,b

a= clf4.best_params_
b= clf4.best_score_
a,b

gnb.score(x_test,y_test)

mnv.score(x_test,y_test)